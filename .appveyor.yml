version: 4.2.2.{build}-{branch}

image:
- Visual Studio 2019
- macos-mojave
- Ubuntu2004

clone_depth: 1

matrix:
  fast_finish: true

for:
-
  matrix:
    only:
      - image: Visual Studio 2019

  init:
    - cmd: SET MINGW64_PATH=mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64
    - cmd: SET MINGW32_PATH=mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32
    - cmd: SET PATH=C:/%MINGW64_PATH%/bin/;C:/%MINGW32_PATH%/bin/;C:/msys64/usr/bin/;%PATH%
    - cmd: SET MSSDK_HOME=/c/Program Files (x86)/Windows Kits/10
    - cmd: SET JAVA_HOME=/c/Program Files/Java/jdk11
    - cmd: SET PROJECT_DIR=/c/projects/lightzone

  install:
    - cmd: cinst ant html-help-workshop
    - cmd: bash -lc 'cp "$MSSDK_HOME/../8.1/Lib/winv6.3/um/x64/Htmlhelp.Lib" /c/$MINGW64_PATH/lib/libhtmlhelp.a'
    - cmd: bash -lc 'cp "$MSSDK_HOME/../8.1/Lib/winv6.3/um/x86/Htmlhelp.Lib" /c/$MINGW32_PATH/lib/libhtmlhelp.a'
    - ps: (new-object net.webclient).DownloadFile('https://download-gcdn.ej-technologies.com/install4j/install4j_windows-x64_8_0_8.exe', 'install4j-installer.exe')
    - ps: install4j-installer.exe -q
    - cmd: bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
    - cmd: bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
    - cmd: bash -lc "pacman-key --verify msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
    - cmd: bash -lc "pacman --noconfirm -U msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
    - cmd: bash -lc "pacman --needed --noconfirm -Sy pacman"
    - cmd: bash -lc "pacman --needed --noconfirm -Su"
    - cmd: bash -lc "pacboy --noconfirm --disable-download-timeout -S lcms2:m lensfun:m ntldd-git:m"

  build_script:
    - cmd: bash -lc "MINGW_DIR=/c/$MINGW64_PATH ant -f $PROJECT_DIR/windows/build.xml build-installer"
    - cmd: bash -lc "make -C $PROJECT_DIR/lightcrafts/coprocesses/ clean"
    - cmd: bash -lc "make -C $PROJECT_DIR/lightcrafts/jnisrc/ clean"
    - cmd: bash -lc "make -C $PROJECT_DIR/windows/jnisrc/ clean"
    - cmd: bash -lc "make -C $PROJECT_DIR/windows/products/ clean"
    - cmd: bash -lc "TARGET=i686 MINGW_DIR=/c/$MINGW32_PATH ant -f $PROJECT_DIR/windows/build.xml -Doffline=true build-installer"
  
  artifacts:
    - path: 'windows/LightZone_Installer_*.exe'
      name: windows installer

-
  matrix:
    only:
      - image: macos-mojave

  init:
    - sh: export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home
    - sh: export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

  install:
    - sh: brew install ant autoconf lensfun libjpeg-turbo libomp libtiff libxml2 little-cms2 pkg-config rsync

  build_script:
    - sh: ant -f macosx/build.xml dmg

  artifacts:
    - path: 'macosx/dmg/LightZone.dmg'
      name: macos installer

-
  matrix:
    only:
      - image: Ubuntu2004

  init:
    - sh: export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

  install:
    - sh: sudo add-apt-repository --yes ppa:lightzone-team/lightzone
    - sh: sudo apt-get update
    - sh: sudo apt-get install -y ant autoconf javahelp2 libejml-java libglib2.0-dev libjaxb-java libjetbrains-annotations-java libjiconfont-font-awesome-java libjiconfont-google-material-design-icons-java libjiconfont-swing-java liblensfun-dev liblcms2-dev liblombok-java librefuel-java libslf4j-java libtiff5-dev tidy

  build_script:
    - sh: ant -f linux/build.xml -Doffline=true

