<project name="macosx" default="build">

  <tstamp/>

  <!--===== Properties =====================================================-->

  <property name="common-dir" value="../lightcrafts"/>
  <property file="${common-dir}/resources/com/lightcrafts/utils/resources/Version.properties"/>

  <property name="app-dir" value="release"/>
  <property name="macosx-jar" value="products/lightcrafts-apple.jar"/>

  <!-- The default maxmemory for the run target. -->
  <property name="maxmemory" value="512m"/>

  <exec executable="cat" vmlauncher="false" failonerror="true"
        outputproperty="app-version">
    <arg value="${common-dir}/version.txt"/>
  </exec>

  <condition property="UNIVERSAL" value="1" else="0">
    <isset property="UNIVERSAL"/>
  </condition>
  <condition property="USE_ICC" value="1" else="0">
    <isset property="USE_ICC"/>
  </condition>

  <!--===== Application build ==============================================-->

  <target name="common">
    <ant dir="${common-dir}" target="jar"/>
    <exec executable="make" dir="products" failonerror="true"
          vmlauncher="false"/>
  </target>

  <target name="javac" depends="common">
    <mkdir dir="build"/>
    <mkdir dir="javah"/>
    <javac destdir="build" includeantruntime="false" debug="true"
           source="1.8" target="1.8" nativeheaderdir="javah">
      <src path="src"/>
      <compilerarg value="-XDignore.symbol.file"/>
      <classpath>
        <pathelement location="/System/Library/Java/"/>
        <fileset dir="${common-dir}/products">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="locale">
    <copy todir="build">
      <fileset dir="locale" excludes=".git"/>
    </copy>
  </target>

  <target name="jni">
    <exec executable="make" dir="jnisrc" failonerror="true" vmlauncher="false">
      <arg value="UNIVERSAL=${UNIVERSAL}"/>
    </exec>
  </target>

  <target name="helpers">
    <exec executable="make" dir="helpers" failonerror="true" vmlauncher="false">
      <arg value="UNIVERSAL=${UNIVERSAL}"/>
    </exec>
  </target>

  <target name="build" depends="javac, locale, jni"/>

  <!--===== Make a jar file ================================================-->

  <target name="jar" depends="build">
    <delete file="${macosx-jar}"/>
    <jar jarfile="${macosx-jar}">
      <fileset dir="build"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="${company-name}"/>
        <attribute name="Implementation-Version"
                   value="${app-version} ${TODAY}"/>
      </manifest>
    </jar>
  </target>

  <target name="check-for-jar">
    <condition property="jar-exists">
      <available file="${macosx-jar}"/>
    </condition>
  </target>

  <target name="jar-if-necessary" depends="check-for-jar" unless="jar-exists">
    <antcall target="jar"/>
  </target>

  <!--===== Run the application ============================================-->

  <target name="run" depends="jar-if-necessary">
    <java classname="com.lightcrafts.platform.macosx.MacOSXLauncher"
          dir="products" failonerror="true" fork="true"
          maxmemory="${maxmemory}">
      <!--
      <jvmarg value="-XrunShark"/>
      -->
      <classpath>
        <pathelement location="/System/Library/Java/"/>
        <fileset dir="products">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <env key="JAVA_JVM_VERSION" value="${jvm-version}"/>
      <sysproperty key="com.lightcrafts.zorn" value="true"/>
      <sysproperty key="IDE" value="true"/>
      <sysproperty key="java.library.path" value="."/>
      <sysproperty key="lightcrafts.debug" value="1"/>
      <sysproperty key="apple.awt.graphics.EnableDeferredUpdates" value="false"/>
      <sysproperty key="file.encoding" value="utf-8" />
    </java>
  </target>

  <!--===== Make Mac OS X application bundles ==============================-->

  <property name="bundle-contents" value="${app-dir}/${app-name}.app/Contents"/>
  <property name="bundle-resources" value="${bundle-contents}/Resources"/>

  <target name="delete-bundle">
    <delete dir="${app-dir}" quiet="true"/>
  </target>

  <condition property="jdk-provider" value="oracle">
    <or>
      <equals arg1="${ant.java.version}" arg2="1.7"/>
      <equals arg1="${ant.java.version}" arg2="1.8"/>
      <equals arg1="${ant.java.version}" arg2="1.9"/>
    </or>
  </condition>

  <condition property="jdk-provider" value="apple">
    <equals arg1="${ant.java.version}" arg2="1.6"/>
  </condition>

  <import file="${jdk-provider}.xml"/>

  <!--===== Make a dmg file ================================================-->

  <target name="dmg" depends="build-bundle">
    <exec executable="make" dir="dmg" failonerror="true" vmlauncher="false">
      <arg value="APP_NAME=${app-name}"/>
      <arg value="USE_ICC=${USE_ICC}"/>
      <arg value="UNIVERSAL=${UNIVERSAL}"/>
      <arg value="user"/>
    </exec>
  </target>

  <!--===== CruiseControl ==================================================-->

  <property name="cc-dir" value="dmg/cruisecontrol"/>

  <target name="cc-build">
    <antcall target="cc-clean"/>
    <exec executable="${common-dir}/tools/bin/lc-git-branch"
          outputproperty="git-branch" vmlauncher="false" failonerror="true"/>
    <exec executable="${common-dir}/tools/bin/lc-git-revision"
          outputproperty="git-revision" vmlauncher="false" failonerror="true"/>

    <mkdir dir="dmg/cruisecontrol"/>

    <antcall target="dmg"/>
    <move file="dmg/${app-name}.dmg"
          tofile="${cc-dir}/${app-name}-${git-branch}-r${git-revision}.dmg"/>
  </target>

  <target name="cc-clean">
    <delete dir="${cc-dir}"/>
  </target>

  <!--===== Make a zip file ================================================-->

  <target name="zip" depends="build-bundle">
    <delete file="${app-dir}/${app-name}.zip"/>
    <zip destfile="${app-dir}/${app-name}.zip">
      <zipfileset dir="${app-dir}"
        excludes="${app-name}.app/Contents/MacOS/${app-name}"/>
      <zipfileset dir="${app-dir}"
        includes="${app-name}.app/Contents/MacOS/${app-name}"
        filemode="755"/>
    </zip>
  </target>

  <!--===== Javadoc ========================================================-->

  <target name="javadoc">
    <mkdir dir="doc"/>
    <javadoc destdir="doc">
      <fileset dir="src"/>
    </javadoc>
  </target>

  <!--===== Clean up =======================================================-->

  <target name="clean-up">
    <ant dir="${common-dir}" target="${clean-method}"/>
    <delete dir="build"/>
    <delete dir="javah"/>
    <delete dir="${app-dir}"/>
    <exec executable="make" dir="dmg">
      <arg value="${clean-method}"/>
    </exec>
    <exec executable="make" dir="helpers">
      <arg value="UNIVERSAL=1"/>
      <arg value="${clean-method}"/>
    </exec>
    <exec executable="make" dir="jnisrc">
      <arg value="UNIVERSAL=1"/>
      <arg value="${clean-method}"/>
    </exec>
    <exec executable="make" dir="products">
      <arg value="${clean-method}"/>
    </exec>
    <antcall target="cc-clean"/>
  </target>

  <target name="distclean">
    <antcall target="clean-up">
      <param name="clean-method" value="distclean"/>
    </antcall>
  </target>
  <target name="clean" depends="distclean"/>

  <target name="mostlyclean">
    <antcall target="clean-up">
      <param name="clean-method" value="mostlyclean"/>
    </antcall>
  </target>

</project>
<!-- vim:set et sw=2 ts=2: -->
