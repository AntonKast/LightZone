Index: dcraw/dcraw_lz.c
===================================================================
--- dcraw.orig/dcraw_lz.c	2015-09-22 10:48:42.544653050 +0900
+++ dcraw/dcraw_lz.c	2015-09-22 10:48:42.540653404 +0900
@@ -144,7 +144,10 @@
 int no_auto_bright=0;
 unsigned greybox[4] = { 0, 0, UINT_MAX, UINT_MAX };
 float cam_mul[4], pre_mul[4], cmatrix[3][4], rgb_cam[3][4];
-const double xyz_rgb[3][3] = {			/* XYZ from RGB */
+#ifndef LIGHTZONE
+const
+#endif
+double xyz_rgb[3][3] = {			/* XYZ from RGB */
   { 0.412453, 0.357580, 0.180423 },
   { 0.212671, 0.715160, 0.072169 },
   { 0.019334, 0.119193, 0.950227 } };
@@ -9968,6 +9971,9 @@
 #ifndef NO_LCMS
   const char *cam_profile=0, *out_profile=0;
 #endif
+#ifdef LIGHTZONE
+  const char *ofbase = 0;
+#endif
 
 #ifndef LOCALTIME
   putenv ((char *) "TZ=UTC");
@@ -10062,6 +10068,9 @@
       case 'p':  cam_profile = argv[arg++];
 #endif
 	break;
+#ifdef LIGHTZONE
+      case 'F':  ofbase     = argv[arg++];  break;
+#endif
       case 'P':  bpfile     = argv[arg++];  break;
       case 'K':  dark_frame = argv[arg++];  break;
       case 'z':  timestamp_only    = 1;  break;
@@ -10090,6 +10099,19 @@
 	return 1;
     }
   }
+#ifdef LIGHTZONE
+  if (!half_size && !thumbnail_only) {
+    float rimm[3][3] = {
+      { 0.7977, 0.2880, 0.0000 },
+      { 0.1352, 0.7119, 0.0000 },
+      { 0.0313, 0.0001, 0.8249 } };
+    int i, j;
+
+    for (i=0; i < 3; ++i)
+      for (j=0; j < 3; ++j)
+        xyz_rgb[i][j] = rimm[j][i];
+  }
+#endif
   if (arg == argc) {
     fprintf (stderr,_("No files to process.\n"));
     return 1;
@@ -10234,6 +10256,10 @@
 	    for (c = i && putchar('/') && 0; c < fwide; c++)
 	      putchar (cdesc[fcol(i,c)]);
 	}
+#ifdef LIGHTZONE
+	printf(_("\nCamera RGB Profile:"));
+	for (i=0; i<3; ++i) FORCC printf(" %f", rgb_cam[i][c]);
+#endif
 	printf (_("\nDaylight multipliers:"));
 	FORCC printf (" %f", pre_mul[c]);
 	if (cam_mul[0] > 0) {
@@ -10346,6 +10372,11 @@
     if (write_to_stdout)
       strcpy (ofname,_("standard output"));
     else {
+#ifdef LIGHTZONE
+      if (ofbase)
+        strcpy (ofname, ofbase);
+      else
+#endif
       strcpy (ofname, ifname);
       if ((cp = strrchr (ofname, '.'))) *cp = 0;
       if (multi_out)
